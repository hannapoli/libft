header VSC Linux / Windows : Ctrl + Alt + H.
Large cows generously comes with chars and four blonde hats to defy upper gravity hero
Check with original functions
GIT add, commit, push!
!!!comment <stdio.h>, dellete unnecessary files, add bonus to makefile, libft.h

Libft (Library of reimplemented standard C functions)

Part 1: reimplementation of the standard functions:

Character check:
‚Ä¢ ft_isalpha - checks for an alphabetic character. It returns a non-zero value if it‚Äôs an alphabetic character, else it returns 0. 
‚Ä¢ ft_isdigit - checks for a digit (0 through 9). It returns a non-zero value if it‚Äôs an alphabetic character, else it returns 0. 
‚Ä¢ ft_isalnum - checks for an alphanumeric character. It returns a non-zero value if it‚Äôs an alphabetic character, else it returns 0. 
‚Ä¢ ft_isascii - checks whether c is an ASCII character. It returns a non-zero value if it‚Äôs an alphabetic character, else it returns 0. 
‚Ä¢ ft_isprint - checks for any printable character including space. It returns a non-zero value if it‚Äôs an alphabetic character, else it returns 0. 

String manipulation:
‚Ä¢ ft_strlen - calculates the length of a string.
‚Ä¢ ft_strlcpy - (string length copy) copies a string with a specified length.
‚Ä¢ ft_strlcat - concatenates (links together) a string with a specified length. It returns the total length: initial length of dst plus the length of src.  
‚Ä¢ ft_strchr - (string first character search) returns a pointer to the first occurrence of the character in the string or NULL if the character is not found. 
‚Ä¢ ft_strrchr - (string last character search) returns a pointer to the last occurrence of  the character c in the string s or NULL if the character is not found.  
‚Ä¢ ft_strncmp - (string compare) compares two strings lexicographically. Returns an integer less than, equal to, or greater than zero if s1 is less than, equal to, or greater than s2 respectively.
‚Ä¢ ft_strnstr - locates a substring in a string.
‚Ä¢ ft_strdup - (string duplicate) returns a pointer to a duplicated string.  

Memory manipulation:
‚Ä¢ ft_memset - (memory set) fills a block of memory with a specific value.
‚Ä¢ ft_bzero - (byte 0) erases  the  data by writing zeros (bytes  containing '\0') to that area. It is less common and has been substituted by memset on some systems.
‚Ä¢ ft_memcpy - (memory copy) copies n bytes from source memory area to destination memory area without their overlapping.
‚Ä¢ ft_memmove - (memory move) copies n bytes from source memory area to destination memory area even when they overlap: copying takes place as though the bytes in src are first copied into a temporary array that does not overlap src or dest, and the bytes are then copied from  the  temporary array to dest.
‚Ä¢ ft_memchr - (memory first character search) scans  the  initial n bytes of the memory area pointed to by a string for the first instance of a character. 
‚Ä¢ ft_memcmp - (memory compare) compares the first n bytes of the memory areas of strings. 

Conversion:
‚Ä¢ ft_toupper - converts to uppercase.
‚Ä¢ ft_tolower - converts to lowercase.
‚Ä¢ ft_atoi -  converts an ASCII string to an integer.

Memory allocation:
‚Ä¢ ft_calloc - (continuous allocation) contiguously allocates enough space for objects with defined size of memory and returns a pointer to the allocated memory. The allocated memory is filled with bytes of value zero.




Part 2: Non-standard functions:

‚Ä¢ ft_substr - extracts a substring from a string.
‚Ä¢ ft_strjoin - concatenates strings.
‚Ä¢ ft_strtrim - trimms the string removing 'set' characters from the beginning and from the end of the string.

ft_split - üò¨Ô∏è splits a string into an array of substrings.

ft_itoa - (integer to ASCII) converts a number into an ASCII character.

strmapi - (string mapping) applies a function to each character in a string.

striteri - (string iteration with index) applies a function to each character in a string with an index.

putchar_fd - writes a character to a file descriptor.

putstr_fd - writes a string to a file descriptor.

putendl_fd - writes a string with a new line to a file descriptor.

putnbr_fd - writes a number to a file descriptor.
